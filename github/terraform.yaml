name: Frontend Project
on:
  # Workflow dispatch is allows us to manually trigger a workflow via the GitHub 
  # web UI.
  # This is useful when you want to rerun the workflow in response to updating 
  # a secret, or need to reconfigure a new system.
  workflow_dispatch:
  # Trigger this workflow on pushes to the main branch.
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Install the latest version of Terraform.
      - uses: hashicorp/setup-terraform@v2
      # Init the Terraform module with a S3 bucket remote state
      - run: >
          terraform init 
          -backend-config="key=frontend" 
          -backend-config="bucket=${{ secrets.BUCKET_NAME }}" 
          -backend-config="region=${{ secrets.AWS_REGION }}"
        working-directory: terraform/frontend/s3backend
        env:
          # The AWS credentials are used when accessing the S3 state bucket
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      - run: terraform apply -auto-approve
        working-directory: terraform/frontend/s3backend
        env:
          # The AWS credentials are used when accessing the S3 state bucket
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          # Environment variables starting with TF_VAR provide the value of 
          # a Terraform variable
          TF_VAR_octopus_server: ${{ secrets.OCTOPUS_SERVER }}
          TF_VAR_octopus_apikey: ${{ secrets.OCTOPUS_API_KEY }}
          TF_VAR_octopus_space_id: ${{ secrets.OCTOPUS_SPACE_ID}}
          # These are required for projects that define a deployment project 
          # configured with CaC
          TF_VAR_gitusername: ${{ secrets.GH_USERNAME }}
          TF_VAR_gitcredential: ${{ secrets.GH_TOKEN }}
          TF_VAR_giturl: ${{ secrets.GH_REPO }}
